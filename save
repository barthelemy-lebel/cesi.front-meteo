<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulaire et Affichage des Données</title>
    <link rel="stylesheet" href="/styles/style.css">
</head>
<body>

    <h1>Sélectionnez un élément et une plage horaire</h1>

    <form id="sensorForm">
        <label for="element">Choisissez un Capteur :</label>
        <select id="sensor-id" name="sensor_id">
            <option value="619048">619048</option>
            <option value="6219043">6219043</option>
            <option value="6218223">6218223</option>
            <!-- Ajoutez autant d'options que nécessaire -->
        </select>

        <br><br>

        <label for="start_date">Date de début :</label>
        <input type="datetime-local" id="start_date" name="start_date" required>

        <br><br>

        <label for="end_date">Date de fin :</label>
        <input type="datetime-local" id="end_date" name="end_date" required>

        <br><br>

        <input type="submit" value="Afficher les données">
    </form>
    <br>

        <button class="open_button" onclick="openForm()">Set Alert</button>
       
        <popup class="popup_form" id="popup_form">
            <form method="post" action="/set_alert">
                <button type="button" class="close_button" onclick="closeForm()">Annuler</button>

                <input type="text" id="name_alert" placeholder="Nom de l'alerte">
                <br>

                <input type="number" id="low_humidity" placeholder="Humidité Basse" class="form_cases" value="" min=0 max=100 step=0.01>
                <input type="number" id="high_humidity" placeholder="Humidité Haute" class="form_cases" value="" min=0 max=100 step=0.01>
                <br>

                <input type="number" id="low_temperature" placeholder="Température Basse" class="form_cases" value="" min=-273.15 max=5000 step=0.01>
                <input type="number" id="high_temperature" placeholder="Température Haute" class="form_cases" value="" min=-273.15 max=5000 step=0.01>
                <br>

                <input type="number" id="frequence" placeholder="Fréquence rappel (minute / 30 par def)" value="" size="35" class="form_cases">
                <br>
                
                <input type="text" id="email" placeholder="Email(s) à notifier (séparer par un ';')" value="" size="35" class="form_cases">
                <br>

                <select id="sensor_id" name="sensor_id" class="form_cases">
                    <option value="619048">619048</option>
                    <option value="6219043">6219043</option>
                    <option value="6218223">6218223</option>
                    <!-- Ajoutez autant d'options que nécessaire -->
                </select>
                <input type="submit" value="Valider">
                <br>
            </form>
        </popup>

    <h2>Données du Capteur</h2>

    <ul id="sensorList"></ul>

    <script>
        // Fonction pour obtenir et afficher les données du serveur
        function getSensorData(sensorId, startDate, endDate) {
            // Formater les dates au format compatible avec le serveur
            const formattedStartDate = new Date(startDate).toISOString();
            const formattedEndDate = new Date(endDate).toISOString();

            // URL du serveur avec les paramètres de la requête GET
            const serverUrl = `http://127.0.0.1:8000/?sensor_id=${encodeURIComponent(sensorId)}&start_date=${encodeURIComponent(formattedStartDate)}&end_date=${encodeURIComponent(formattedEndDate)}`;

            // Effacer les anciennes données
            document.getElementById('sensorList').innerHTML = '';

            // Effectuer une requête fetch pour obtenir les données du serveur
            fetch(serverUrl)
                .then(response => response.json()) // Convertir la réponse en JSON
                .then(data => {
                    // Manipuler les données une à une
                    data.forEach(sensor => {
                        // Créer un élément li pour afficher chaque propriété
                        const sensorListItem = document.createElement('li');
                        sensorListItem.innerHTML = `
                            ID Capteur: ${sensor['id_capteur']}<br>
                            Température: ${sensor.temperature}<br>
                            Humidité: ${sensor.humidity}<br>
                            Batterie: ${sensor.battery}<br>
                            Signal RSSI: ${sensor['signal_rssi']}<br>
                            Date: ${sensor.date}<br>
                            -------------------
                        `;

                        // Ajouter l'élément li à la liste des capteurs
                        document.getElementById('sensorList').appendChild(sensorListItem);
                    });
                })
                .catch(error => console.error('Erreur de récupération des données:', error));
        }

        // Écouter l'événement de soumission du formulaire
        document.getElementById('sensorForm').addEventListener('submit', function (event) {
            // Empêcher le formulaire de se soumettre normalement
            event.preventDefault();

            // Obtenir la valeur sélectionnée dans la liste déroulante
            const selectedElement = document.getElementById('sensor-id').value;

            // Obtenir la valeur sélectionnée dans les champs de date
            const startDate = document.getElementById('start_date').value;
            const endDate = document.getElementById('end_date').value;

            // Appeler la fonction pour obtenir et afficher les données du serveur
            getSensorData(selectedElement, startDate, endDate);
        });

        function openForm() {
            document.getElementById("popup_form").style.display = "block";
        }
        function closeForm() {
            document.getElementById("popup_form").style.display = "none";
        }
    </script>

</body>
</html>


* {
    margin: 0;
    padding: 0;
  }
  
  .open_button{
    background-color:white;
    margin: auto;
    border-radius: 5px;
    padding: 5px;
  }
  
  .close_button{
    position: absolute;
    color: black;
    background-color: white;
    bottom: 5px;
    left: 5px;
    border-color: black;
    border-radius: 2px;
    padding: 1px;
  }
  .popup_form{
    position: absolute;
    z-index: 100;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display : none;
    background-color: white;
    border: 3px solid #13538a;
    border-radius: 15px;
    border-top-right-radius: 0px;
    border-top-left-radius: 0px;
    text-align: center;
  }
  
  .form_cases{
    text-align: center;
    margin: 5px;
    border-radius: 15px;
    border: 2px solid black
  }
  
  #name_alert {
    background-color: #13538a;
    text-align: center;
    border-color: transparent;
    width: 100%;
  }